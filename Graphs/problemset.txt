DESAFIO DE GRAFOS - N√çVEL 1: CONECTIVIDADE B√ÅSICA (BFS)

**Cen√°rio:** Uma pequena rede de esta√ß√µes de metr√¥. Queremos saber se √© poss√≠vel ir de uma esta√ß√£o para outra, independentemente da dist√¢ncia ou do tempo (todos os trechos t√™m "custo" 1).

**O Grafo (Lista de Adjac√™ncia):**

| Esta√ß√£o (N√≥) | Conex√µes (Vizinhos) |
| :---: | :---: |
| **A** | B, D |
| **B** | A, C |
| **C** | B, E |
| **D** | A |
| **E** | C |

*(Este √© um grafo n√£o-direcionado: se A liga a B, B tamb√©m liga a A.)*

### Sua Tarefa (Implementa√ß√£o em Java):

1.  **Representa√ß√£o:** Crie uma classe e um m√©todo principal para **montar o grafo** usando a **Lista de Adjac√™ncia** (`Map<String, Set<String>>`).
2.  **Algoritmo:** Implemente o m√©todo:
    ```java
    public static boolean isReachable(
        Map<String, Set<String>> graph, 
        String start, 
        String end
    )
    ```
    que utilize a **Busca em Largura (BFS)** para retornar `true` se houver um caminho entre as esta√ß√µes `start` e `end`, e `false` caso contr√°rio.

### Teste de Verifica√ß√£o:

Seu c√≥digo deve retornar:

  * `isReachable(graph, "A", "E")` $\rightarrow$ ?
  * `isReachable(graph, "D", "B")` $\rightarrow$ ?

Fique √† vontade para me enviar a classe completa, incluindo a estrutura do grafo e o m√©todo `isReachable`\! Estou pronto para guiar seus pr√≥ximos passos\! üöÄ